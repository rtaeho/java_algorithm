# 5 4
# N = 5, M = 4
# 1 2 3 4 5
# 4번 바꾸겠다.
# 1 2 -> 첫 번째 시도
# i = 1, j = 2
# 2 1 3 4 5
# 3 4 -> 두 번째 시도
# i = 3, j = 4
# 2 1 4 3 5
# 1 4 -> 세 번째 시도
# i = 1, j = 4
# 3 4 1 2 5
# 2 2 -> 네 번째 시도
# i = 2, j = 2
# 3 4 1 2 5

N, M = map(int, input().split())
# N : 바구니 개수
# M : 바꾸는 횟수
basket = []
for i in range(1, N + 1):
    basket.append(i)
# [1, 2, 3, 4, 5]
# 바구니 생성
# 바꾸기
# 몇 번?
# M번!
for _ in range(M):
    i, j = map(int, input().split())
    # 평소 사용하는 말로 두번째에서 다섯번째
    # 2~5
    # => index로 생각할 때는 1을 빼주면 된다
    # => 왜냐? index는 0부터 시작해서!
    # index로는 1~4
    # 배열에서는 ~기호가 아니라 :기호로
    # [1:4] -> 얘도 for문 처럼 마지막 숫자 전까지
    # [1:5] -> 5까지 해줘야 4까지 보고 5전에 멈춤
    basket[i:j]
    # basket [1,2,3,4,5,6,7,8,9]
    # 두번째 다섯번째
    # [1:5]

    # 두번째 숫자에서 5번째 숫자를 뒤집을거에요
    # 두번째 숫자에서 다섯번째 숫자
    # 2,3,4,5
    # basket [1,2,3,4,5,6,7,8,9]
    # i : 2, j : 5
    # basket[i:j]
    # basket[2:5] -> basket[1:5]
    basket[i - 1 : j] = reversed(basket[i - 1 : j])
    # list : [1,2,3,4] = 인덱스가 0부터 시작
    # list[1] = 2 (index 가 1인 숫자)
    # list["index"]
    # list[3] = 4
    # list[1] => 리스트에서 인덱스가 1인 숫자 = 리스트에서 첫 번째 숫자
    # list[10] => 리스트에서 10번째 숫자
    # list[1:3] = 인덱스가 1부터 3까지의 숫자 : 2,3,4

print(*basket)